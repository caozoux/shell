#!/bin/bash

#=====================reveiw template variable=================================

function ssha_help() 
{
	echo "-Y:  ssh -y server"
	echo "[12345]: ssh -y pek-lpgbuild[1234].wrs.com"
	echo "nfs:  login vlm nfs server"
	echo "rrme:  send review email to myself"
	echo "emailrr:  send review email to review email list"
	echo "git:  login git server"
	echo "rp:  create review template"
}

function patch_format() 
{
	/fslink/ti/kernel-3.14.x/scripts/checkpatch.pl *.patch 3>&1 | grep total |
	while read line 
	do
		result=`echo $line | cut -b 8`
		if [ "$result" = "0" ]
		then
			:
		else
			echo "patch format error, please modify it"
			echo $line
			exit
		fi
	done
}

review_manage="xulin.sun@windriver.com"
function choose_reviewer()
{
	#read -p "whitch review you want(1~3): \n 1 kexin.hao@windriver.com \n 2xulin.sun@windriver.com\n 3 zumeng.chen@windriver.com\n 4 lu.jiang@windriver.com\n 5 yanjiang.jin@windriver.com\n" answer 
	echo -e  "whitch review you want(1~5): \n 1: kexin.hao@windriver.com \n 2: xulin.sun@windriver.com\n 3: zumeng.chen@windriver.com\n 4: lu.jiang@windriver.com\n 5: yanjiang.jin@windriver.com\n"
	read -p "input:"  answer
	if [ $answer = "1" ]
	then
		review_manage="kexin.hao@windriver.com"
	elif [ $answer == "2" ]
	then
		review_manage="xulin.sun@windriver.com"
	elif [ $answer == "3" ]
	then
		review_manage="zumeng.chen@windriver.com"
	elif [ $answer == "4" ]
	then
		review_manage="lu.jiang@windriver.com"
	elif [ $answer == "5" ]
	then
		review_manage="yanjiang.jin@windriver.com"
	else
		echo "please input 1~5"
		exit
	fi
	
}

function get_context_line()
{
	line=`cat $1 | grep -n "$2" | sed -n 1p | cut -d : -f 1`
	return $line
}

function generate_review()
{
	REVIEW_TITLE1=" [WRL8]"
	rr_name=$2
	patch_cnt=`ls $1/*.patch | wc -l`
	context_line=6

	#check the title lines of patch
	if [ "$patch_cnt" = "1" ]
	then

		patch_name=`echo $1/*.patch`
    	title1=`sed -n '4p' $patch_name  | cut -b 18-`
    	title2=`sed -n '5p' $patch_name`

		if [ "$title2" == "" ]
		then
			title=$title1
		else
			title=$title1$title2
			context_line=`expr $context_line + 1`
			echo "tile lines is 2"
		fi

		#check the format for patch
		format=`cat $patch_name | grep Issue\:`

		if [ "$format" == "" ]
		then
			:
		else
			context_line=`expr $context_line + 2`
			echo "format-> Issue"
		fi

		#get the patch commit context
		echo $context_line
		context_end=`sed -n ''$context_line',\$p' $patch_name | grep -n "^\$" | sed -n 1p | cut -d : -f 1`
		context_end=`expr $context_line + $context_end`
		context_end=`expr $context_end - 1`
		context=`sed -n ''$context_line','$context_end'p' $patch_name`
		rr_title=$REVIEW_TITLE1:$title

		sed -i "1 s/$/$rr_title/" rr
		sed -i "3 s/$/$title/" rr

		get_context_line $rr_name "Comments "
		commit_line=$?

		#write it to rr commit
		if [ "$commit_line" != "0" ]
		then
			commit_line=`expr $commit_line + 2`
			#sed -i "N;${commit_line}a${context}" $rr_name
			context=`echo $context | sed 'N;s/\n/\\n/g'`
			sed -i "${commit_line}a $context\n" $rr_name
		fi

		read -p "you review is kernel(Y/n): $review_manage ?" answer 
		
		if [ "$answer" = "n" ]
		then
			read -p "you review is configuration(Y/n): $review_manage ?" answer 
			if [ "$answer" = "n" ]
			then
				echo "sorry, no your choose, exit!"
				exit
			else
				sed -i "23 s/n$/y/" $rr_name
			fi
		else
			sed -i "21 s/n$/y/" $rr_name
		fi

		read -p "you review is bsp?" answer
		if [ "$answer" = "" ]
		then
			echo "bsp can't be null"
			exit
		else
			sed -i "63 s/ n/ y/" $rr_name
			sed -i "63 s/$/    $answer/" $rr_name
		fi
	fi
}

if [ $# != 1 ]
then
	#sshpass -p '3333czou' ssh czou@pek-lpgbuild1.wrs.com
	sshpass -p '3333czou' ssh czou@pek-lpggp4
else
	if [ $1 == "-Y" ]
	then
		sshpass -p '3333czou' ssh -Y czou@pek-lpgbuild1.wrs.com
	elif [ $1 == "nfs" ]
	then
		echo ""
		echo "========================================="
		echo "nfs path is "/export/pxeboot/vlm-boards/""
		echo "========================================="
		echo ""
		sshpass -p '3333czou' ssh czou@128.224.165.20
	elif [ $1 == "vnc" ]
	then 
		ssh -D 9195 -qtfnN czou@ala-tuxlab.wrs.com
	elif [ $1 == "rrme" ]
	then 
		patch_format
		git send-email --no-chain-reply-to --to cao.zou@windriver.com rr *.patch
	elif [ $1 == "emailrr" ]
	then 
		patch_format
		choose_reviewer
		echo "git send-email --no-chain-reply-to --to $review_manage --cc yue.tao@windriver.com -cc lpd-eng-rr@windriver.com rr *.patch"
		read -p "you sure rr review(y/n): $review_manage ?" answer 
		if [ $answer = "y" ]
		then
			#echo "git send-email --no-chain-reply-to --to $review_manage --cc yue.tao@windriver.com -cc lpd-eng-rr@windriver.com rr *.patch"
			git send-email --no-chain-reply-to --to $review_manage --cc yue.tao@windriver.com -cc lpd-eng-rr@windriver.com rr *.patch
		fi
	elif [ $1 == "rp" ]
	then 
		cp ~/github/shell/rr . -f
		generate_review . rr
	elif [ $1 == "git" ]
	then 
		sshpass -p '3333czou' ssh czou@pek-git.wrs.com
	elif [ $1 == "-h" | $1 == "help" ]
	then 
		ssha_help
	else 
		sshpass -p '3333czou' ssh czou@pek-lpgbuild$1.wrs.com
		echo "czou@pek-lpgbuild$1.wrs.com"
	fi
fi
